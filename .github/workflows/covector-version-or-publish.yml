name: version or publish

on:
  push:
    branches:
      - v2

jobs:
  version-or-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 65
    outputs:
      change: ${{ steps.covector.outputs.change }}
      commandRan: ${{ steps.covector.outputs.commandRan }}
      successfulPublish: ${{ steps.covector.outputs.successfulPublish }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # required for use of git history
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: "https://registry.npmjs.org"
      - name: git config
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"
      - uses: volta-cli/action@v4
      - run: yarn install --immutable
      - run: yarn prepack
      - name: covector version or publish (publish when no change files present)
        uses: jbolda/covector/packages/action@covector-v0.10
        id: covector
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        with:
          token: ${{ secrets.FRONTSIDEJACK_GITHUB_TOKEN }}
          command: "version-or-publish"
      - run: yarn install # this is to update the lockfile with the new versions of dependencies as a result of covector
      - name: Create Pull Request With Versions Bumped
        id: cpr
        uses: peter-evans/create-pull-request@v3
        if: steps.covector.outputs.commandRan == 'version'
        with:
          title: "Publish New Versions"
          commit-message: "publish new versions"
          labels: "version updates"
          branch: "release-v2"
          body: ${{ steps.covector.outputs.change }}
          token: ${{ secrets.FRONTSIDEJACK_GITHUB_TOKEN }}
          author: frontsidejack <frontsidejack@users.noreply.github.com>

  deploy-typedocs:
    runs-on: ubuntu-latest
    needs: version-or-publish
    if: ${{ needs.version-or-publish.outputs.successfulPublish == 'true' }}
    steps:
      - name: Trigger Netlify Build
        run: curl -X POST -d {} ${{ secrets.DEPLOY_API_DOCS_V2 }}
